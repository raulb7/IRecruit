Eti\JobeetBundle\Entity\Job:
    type: entity
    repositoryClass: Eti\JobeetBundle\Repository\JobRepository
    table: job
    id:
        id:
            type: integer
            id: true
            generator: { strategy: AUTO }
    fields:
        type:
            type: string
            length: 255
            nullable: true
        position:
            type: string
            length: 255
        location:
            type: string
            length: 255
        description:
            type: text
        howToApply:
            type: text
            column: how_to_apply
        token:
            type: string
            length: 255
            unique: true
        isPublic:
            type: boolean
            nullable: true
            column: is_public
        isActivated:
            type: boolean
            nullable: true
            column: is_activated
        expiresAt:
            type: datetime
            column: expires_at
        categoryId:
            type: integer
            nullable: true
            column: category_id
        createdAt:
            type: datetime
            column: created_at
        updatedAt:
            type: datetime
            nullable: true
            column: updated_at
    manyToOne:
        category:
            targetEntity: Category
            inversedBy: jobs
            joinColumn:
                name: category_id
                referencedColumnName: id
        company:
            targetEntity: Company
            inversedBy: jobs
            joinColumn:
                name: company_id
                referencedColumnName: id
                orphanRemoval: true
    manyToMany:
        users:
            targetEntity: User
            inversedBy: jobs
            joinTable:
                name: job_user
                joinColumns:
                     job_id:
                         referencedColumnName: id
                inverseJoinColumns:
                     user_id:
                         referencedColumnName: id

    lifecycleCallbacks:
        prePersist: [ setTokenValue, preUpload, setCreatedAtValue, setExpiresAtValue ]
        preUpdate: [ preUpload, setUpdatedAtValue ]
        postPersist: [ upload, updateLuceneIndex ]
        postUpdate: [ upload, updateLuceneIndex ]
        postRemove: [ removeUpload, deleteLuceneIndex ]